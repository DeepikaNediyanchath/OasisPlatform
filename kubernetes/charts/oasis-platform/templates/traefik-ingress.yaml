apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: kube-system
data:
  traefik.toml: |
    defaultEntryPoints = ["http", "https"]

    [entryPoints]
      [entryPoints.http]
      address = ":80"
        [entryPoints.http.redirect]
          entryPoint = "https"
      [entryPoints.https]
      address = ":443"
        [entryPoints.https.tls]

    [api]
    dashboard = true

    [ping]

    [providers.kubernetesCRD]
    namespace = ["default", "kube-system"]
    [providers.kubernetesCRD.ingressClass = "traefik"]

    [certificatesResolvers.myresolver.acme]
      email = "rodney.effah@oasislmf.org"
      storage = "/data/acme/json"
      [certificatesResolvers.myresolver.acme.dnsChallenge]
        provider = "dnsProvider"

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-controller
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefik-ingress-controller
  template:
    metadata:
      name: traefik-ingress-controller
      labels:
        app: traefik-ingress-controller
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
      - name: traefik-ingress-controller
        image: traefik:v2.5
        args:
        - --configfile=/config/traefik.toml
        - --log.level=INFO
        - --entryPoints.http.address=:80
        - --entryPoints.https.address=:443
        - --api.dashboard=true
        - --ping=true
        - --providers.kubernertesCRD.namespaces=default,kube-system
        - --providers.kubernertesCRD.ingressClass=traefik
        # - --certificatesresolvers.myresolver.acme.email=rodney.effah@oasislmf.org
        # - --certificatesresolvers.myresolver.acme.storage=/data/acme.json
        # - --certificatesresolvers.myresolver.acme.dnschallenge.provider=dnsProvider
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - mountPath: /config
          name: config
      volumes:
      - name: config
        configMap:
          name: traefik-config  

---

apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    app: traefik-ingress-controller
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 80
    name: oasis-ui
  # - protocol: TCP
  #   port: 443
  #   targetPort: 443
  #   name:
  type: LoadBalancer

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-ingress-service
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oasis-ui
            port:
              number: 8080